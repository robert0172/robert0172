/*
Google Ads Script: Search Impression Share (SIS) Based Bid Adjuster for Branded Campaign

Instructions:
1. Copy this entire script and paste it into your Google Ads script editor.
2. Replace 'robert.creutzburg@skydreams.nl' with the email address where you want to receive weekly reports.
3. (Optional) Adjust the targetSIS value if you want to change the target Search Impression Share.
4. (Optional) Modify the lookbackDays, clickThreshold, or clickThresholdDays values to adjust the analysis parameters.
5. Save the script.
6. Run the script manually to test it, or set up a daily schedule for automated running.

This script will:
- Analyze enabled keywords in the "Search - branded - Skydreams" campaign that have more than 10 clicks in the last 30 days.
- Adjust bids daily based on the 14-day average Search Impression Share, aiming for a target of 85%.
- Increase or decrease bids by €0.01, with a maximum bid of €1.00.
- Send a weekly email report every Monday with all bid adjustments made in the past week.

Note: This script is designed to run daily, but will only send the email report on Mondays.
*/

function main() {
  var campaignName = "Search - branded - Skydreams";
  var targetSIS = 0.85;
  var bidAdjustment = 0.01;
  var emailAddress = "robert.creutzburg@skydreams.nl";
  var lookbackDays = 14;
  var clickThreshold = 10;
  var clickThresholdDays = 30;
  var maxBid = 1.00; // Maximum bid set to €1

  var campaign = AdsApp.campaigns()
    .withCondition("Name = '" + campaignName + "'")
    .get()
    .next();

  if (!campaign) {
    Logger.log("Campaign not found: " + campaignName);
    return;
  }

  var dateRange = getDateRange(lookbackDays);
  var clickThresholdDateRange = getDateRange(clickThresholdDays);

  var report = AdsApp.report(
    "SELECT Criteria, SearchImpressionShare, AverageCpc, Clicks " +
    "FROM KEYWORDS_PERFORMANCE_REPORT " +
    "WHERE CampaignName = '" + campaignName + "' " +
    "AND Status = ENABLED " +
    "AND Clicks > " + clickThreshold + " " +
    "DURING " + clickThresholdDateRange
  );

  var adjustments = [];

  var rows = report.rows();
  while (rows.hasNext()) {
    var row = rows.next();
    var keyword = row['Criteria'];
    var searchImpressionShare = parseFloat(row['SearchImpressionShare']) / 100;
    var currentBid = parseFloat(row['AverageCpc']);
    var clicks = parseInt(row['Clicks']);

    Logger.log("Analyzing keyword: " + keyword + " (Clicks in last 30 days: " + clicks + ")");

    if (searchImpressionShare < targetSIS && currentBid < maxBid) {
      var newBid = Math.min(currentBid + bidAdjustment, maxBid);
      adjustments.push(adjustBid(keyword, currentBid, newBid, "Increased", searchImpressionShare, targetSIS, lookbackDays));
    } else if (searchImpressionShare > targetSIS) {
      var newBid = currentBid - bidAdjustment;
      adjustments.push(adjustBid(keyword, currentBid, newBid, "Decreased", searchImpressionShare, targetSIS, lookbackDays));
    } else {
      Logger.log("No change for keyword: " + keyword + " (" + lookbackDays + "-day avg SIS: " + 
                 (searchImpressionShare * 100).toFixed(2) + "% matches target SIS: " + (targetSIS * 100).toFixed(2) + "%)");
    }
  }

  // Send weekly email report on Monday
  if (new Date().getDay() === 1) {
    sendWeeklyReport(emailAddress, adjustments);
  }
}

function getDateRange(daysAgo) {
  var endDate = new Date();
  var startDate = new Date(endDate.getTime() - daysAgo * 24 * 60 * 60 * 1000);
  
  return formatDate(startDate) + "," + formatDate(endDate);
}

function formatDate(date) {
  var year = date.getFullYear();
  var month = (date.getMonth() + 1).toString().padStart(2, '0');
  var day = date.getDate().toString().padStart(2, '0');
  return year + month + day;
}

function adjustBid(keyword, oldBid, newBid, action, currentSIS, targetSIS, lookbackDays) {
  var keywordIterator = AdsApp.keywords()
    .withCondition("KeywordText = '" + keyword + "'")
    .get();
  
  if (keywordIterator.hasNext()) {
    var keywordEntity = keywordIterator.next();
    keywordEntity.bidding().setCpc(newBid);
    
    var change = Math.abs(newBid - oldBid).toFixed(2);
    var logMessage = action + " bid for keyword: " + keyword + " by €" + change + 
               " (Old bid: €" + oldBid.toFixed(2) + ", New bid: €" + newBid.toFixed(2) + "). " +
               "Reason: " + lookbackDays + "-day avg SIS is " + (currentSIS * 100).toFixed(2) + "%, " +
               (action === "Increased" ? "below" : "above") + " target SIS of " + (targetSIS * 100).toFixed(2) + "%.";
    Logger.log(logMessage);
    return logMessage;
  }
  return null;
}

function sendWeeklyReport(emailAddress, adjustments) {
  var subject = "Weekly Bid Adjustment Report for Search - branded - Skydreams";
  var body = "Here are the bid adjustments made in the past week:\n\n";
  
  body += adjustments.filter(adj => adj !== null).join("\n\n");
  
  if (adjustments.length === 0) {
    body += "No bid adjustments were made this week.";
  }

  MailApp.sendEmail(emailAddress, subject, body);
  Logger.log("Weekly report email sent to " + emailAddress);
}
